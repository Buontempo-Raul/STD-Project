version: '3.8'

services:
  # Backend pentru Face Detection
  ai-backend:
    build:
      context: ./ai/backend
      dockerfile: Dockerfile
    container_name: ai-backend
    image: localhost:5000/ai-backend:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=89
      - USE_MOCK_DATA=false
    ports:
      - "89:89"
    volumes:
      - ./ai/backend/temp:/app/temp
    networks:
      - app-network

  # Frontend pentru Face Detection
  ai-frontend:
    build:
      context: ./ai/frontend
      dockerfile: Dockerfile
    container_name: ai-frontend
    image: localhost:5000/ai-frontend:latest
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:89
    ports:
      - "91:91"
    networks:
      - app-network
    depends_on:
      - ai-backend

  # Baza de date MongoDB
  mongodb:
    image: mongo:4.4
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Chat (Node.js)
  chat-backend:
    build:
      context: ./chat/backend
      dockerfile: Dockerfile
    container_name: chat-backend
    image: localhost:5000/chat-backend:latest
    environment:
      - PORT=88
      - MONGODB_URI=mongodb://root:example@mongodb:27017/chat?authSource=admin
    ports:
      - "88:88"
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
    # Eliminam healthcheck care cauzeazÄƒ probleme

  # Frontend Chat (React)
  chat-frontend:
    build:
      context: ./chat/frontend
      dockerfile: Dockerfile
    container_name: chat-frontend
    image: localhost:5000/chat-frontend:latest
    ports:
      - "90:90"
    networks:
      - app-network
    depends_on:
      - chat-backend

  # Statamic
  statamic:
    build:
      context: ./cms
      dockerfile: Dockerfile
    image: localhost:5000/statamic:latest
    ports:
      - "80:80"
    volumes:
      - statamic_storage:/var/www/html/storage
      - statamic_content:/var/www/html/content
      - statamic_resources:/var/www/html/resources
    environment:
      - APP_ENV=local
      - APP_KEY=base64:OhnkcxLhoN5uBZ2QjikXVT3pM/YC5kpyWl65hyCeNr8=
      - APP_DEBUG=true
      - APP_URL=http://localhost
      - DB_CONNECTION=sqlite

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  statamic_storage:
  statamic_content:
  statamic_resources:
